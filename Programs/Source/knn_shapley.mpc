from Compiler.library import *
from Compiler import mpc_math

# 训练数据量
T_NUM = 3
# 验证数据量
V_NUM = 3
# 特征数量
F_NUM = 3


# 验证函数
def test(actual, expected):

    # you can reveal a number in order to print it

    actual = actual.reveal()
    print_ln('expected %s, got %s', expected, actual)

# 定义计算距离的函数
def dist(v1, v2, length):
    # 初始化差值
        sum_of_squares = sfix(0)

        # 计算向量差的平方和
        for i in range(length):
            diff = v1[i] - v2[i]
            sum_of_squares += diff * diff

        # 计算平方根
        distance = mpc_math.sqrt(sum_of_squares)

        return distance
        # return sum_of_squares

# 拼接两个数字
def bit_concatenate(a, b, bit_length_a, bit_length_b):
    # bit_length_a 和 bit_length_b 是 a 和 b 的二进制长度

    # 将 b 向左移 bit_length_a 位来为 a 留出位置
    shifted_b = b << bit_length_a

    # 合并两个数字，a 直接加到移位后的 b 上
    result = shifted_b + a

    return result


# 输入数据。暂时定义为，3个参与方 每方只有一条数据，包括3个特征
x_train = MultiArray([3, 3], sfix)
# x_train = [[sfix(0) for _ in range(3)] for _ in range(3)]
y_train = Array(3, sfix)

# party0 input
# x_train = Array(3, sfix)
@for_range(3)
def f(i):
    x_train[0][i] = sfix.get_input_from(0)
y_train[0] = sfix.get_input_from(0)

# party1 input
# x_train = Array(3, sfix)
@for_range(3)
def f(i):
    x_train[1][i] = sfix.get_input_from(1)
y_train[1] = sfix.get_input_from(1)

# party2 input
# x_train_2 = Array(3, sfix)
@for_range(3)
def f(i):
    x_train[2][i] = sfix.get_input_from(2)
y_train[2] = sfix.get_input_from(2)

# party3 (buyer) input 两条数据*3个特征=6
x_valid = MultiArray([2,3], sfix)
y_valid = Array(2, sfix)
@for_range(2)
def f(i):
    @for_range(3)
    def g(j):
        x_valid[i][j] = sfix.get_input_from(3)
@for_range(2)
def f(i):
    y_valid[i] = sfix.get_input_from(3)

print_ln('got %s', y_valid[0].reveal())

# 对于每个valid数据都计算距离 TODO 是否要统一为sfix类型
dists = MultiArray([2,3], sfix)
@for_range(2)
def f(i):
    @for_range(3)
    def g(j):
        dists[i][j] = dist(x_train[j], x_valid[i], 3)
        print_ln('dist: %s', dists[i][j].reveal())

# 计算排序



# TODO 这里如何获得密态permutation -> sort时带上index


# TODO 如何应用permutation
# TODO 如何将payload和index拼接到一起？






